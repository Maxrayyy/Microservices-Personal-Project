!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("vue")):"function"==typeof define&&define.amd?define(["exports","vue"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).Vue3baiduMapGl={},e.Vue)}(this,(function(e,t){"use strict";const o={all:n=n||new Map,on:function(e,t){var o=n.get(e);o?o.push(t):n.set(e,[t])},off:function(e,t){var o=n.get(e);o&&(t?o.splice(o.indexOf(t)>>>0,1):n.set(e,[]))},emit:function(e,t){var o=n.get(e);o&&o.slice().map((function(e){e(t)})),(o=n.get("*"))&&o.slice().map((function(o){o(e,t)}))}};var n;function a(){return o}const i=()=>{},l={};function r({key:e,src:t,addCalToWindow:o=!1,exportGetter:n=i}){let a;try{a=n()}catch(e){}if(l[e]||a){if(void 0!==a)return Promise.resolve({[e]:a})}else l[e]=new Promise(((a,i)=>{const l=document.createElement("script"),r=()=>{a({[e]:n()}),window.document.body.removeChild(l)};o?window[e]=r:l.onload=function(){this.readyState&&"loaded"!=this.readyState&&"complete"!=this.readyState||(l.onload=null,r())},l.src=t,l.type="text/javascript",l.defer=!0,l.onerror=i,document.body.appendChild(l)}));return l[e]}const s={Mapvgl:"https://unpkg.com/mapvgl/dist/mapvgl.min.js",MapvglThreeLayers:"https://unpkg.com/mapvgl/dist/mapvgl.threelayers.min.js",Mapv:"https://unpkg.com/mapv/build/mapv.min.js",MapvThree:"https://unpkg.com/mapv-three/dist/mapvthree.umd.js",TrackAnimation:"https://mapopen.bj.bcebos.com/github/BMapGLLib/TrackAnimation/src/TrackAnimation.min.js",DrawingManager:"https://mapopen.bj.bcebos.com/github/BMapGLLib/DrawingManager/src/DrawingManager.min.js",DistanceTool:"https://mapopen.bj.bcebos.com/github/BMapGLLib/DistanceTool/src/DistanceTool.min.js",GeoUtils:"https://mapopen.bj.bcebos.com/github/BMapGLLib/GeoUtils/src/GeoUtils.min.js",AreaRestriction:"https://mapopen.bj.bcebos.com/github/BMapGLLib/AreaRestriction/src/AreaRestriction.min.js",InfoBox:"https://mapopen.bj.bcebos.com/github/BMapGLLib/InfoBox/src/InfoBox.min.js",RichMarker:"https://bj.bcebos.com/v1/mapopen/github/BMapGLLib/RichMarker/src/RichMarker.min.js",LuShu:"https://bj.bcebos.com/v1/mapopen/github/BMapGLLib/Lushu/src/Lushu.min.js"},c={TrackAnimation:e=>r({src:e||s.TrackAnimation,key:"trackAnimation",exportGetter:()=>window.BMapGLLib.TrackAnimation}),DrawingManager:e=>r({src:e||s.DrawingManager,key:"DrawingManager",exportGetter:()=>window.BMapGLLib.DrawingManager}),DistanceTool:e=>r({src:e||s.DistanceTool,key:"DistanceTool",exportGetter:()=>window.BMapGLLib.DistanceTool}),GeoUtils:e=>r({src:e||s.GeoUtils,key:"GeoUtils",exportGetter:()=>window.BMapGLLib.GeoUtils}),RichMarker:e=>r({src:e||s.RichMarker,key:"RichMarker",exportGetter:()=>window.BMapGLLib.RichMarker}),AreaRestriction:e=>r({src:e||s.AreaRestriction,key:"AreaRestriction",exportGetter:()=>window.BMapGLLib.AreaRestriction}),InfoBox:e=>r({src:e||s.InfoBox,key:"InfoBox",exportGetter:()=>window.BMapGLLib.InfoBox}),LuShu:e=>r({src:e||s.Lushu,key:"Lushu",exportGetter:()=>window.BMapGLLib.LuShu}),Mapvgl:e=>r({src:e||s.Mapvgl,key:"Mapvgl",exportGetter:()=>window.mapvgl}),MapvglThreeLayers:e=>r({src:e||s.MapvglThreeLayers,key:"MapvglThreeLayers",exportGetter:()=>window.mapvglThreeLayers}),Mapv:e=>r({src:e||s.Mapv,key:"Mapv",exportGetter:()=>window.mapv}),MapvThree:e=>r({src:e||s.MapvThree,key:"MapvThree",exportGetter:()=>window.mapvthree})};function u(e,t,o){for(const n of Object.keys(e))if(/^on/.test(n)&&e[n]){const e=n.replace(/^on/,"").toLocaleLowerCase();o.addEventListener(e,(o=>{var n,a;o.preventDefault=o.preventDefault||(null===(n=o.domEvent)||void 0===n?void 0:n.preventDefault.bind(o.domEvent)),o.stopPropagation=o.stopPropagation||(null===(a=o.domEvent)||void 0===a?void 0:a.stopPropagation.bind(o.domEvent)),t(e,o)}))}}new Set;function d(e,t){console.warn(`[Vue3 BaiduMap GL/${e}]: ${t}`)}function p(e,t){console.error(`[Vue3 BaiduMap GL/${e}]: ${t}`)}const f="undefined"!=typeof window,m=e=>void 0!==e;function g(e){return"[object String]"===Object.prototype.toString.call(e)}function v(e){return"[object Array]"===Object.prototype.toString.call(e)}var y;function h(e){return e.map((({lng:e,lat:t})=>new BMapGL.Point(e,t)))}function b({lng:e,lat:t}){return new BMapGL.Point(e,t)}e.DistrictType=void 0,(y=e.DistrictType||(e.DistrictType={}))[y.PROVINCE=0]="PROVINCE",y[y.CITY=1]="CITY",y[y.AREA=2]="AREA";let w=0;function M(e,t,o){return n=>e()?t(n):o(n)}function C(e){return(t,o)=>{(t===o||t!==o&&JSON.stringify(t)!==JSON.stringify(o))&&e(t)}}const B={1:"PLAYING",2:"INITIAL",3:"STOPPING"};const k={0:"BMAP_STATUS_SUCCESS",8:"ERR_POSITION_TIMEOUT",2:"ERR_POSITION_UNAVAILABLE",6:"ERR_PERMISSION_DENIED"};function O(e,t,o){return new Promise((n=>{e.getPoint(t,(e=>n(e||null)),o)}))}function L(e,t,o){return new Promise((n=>{e.getLocation(new BMapGL.Point(t.lng,t.lat),(e=>{n(e||null)}),o)}))}var S,G;e.CoordinatesFromType=void 0,(S=e.CoordinatesFromType||(e.CoordinatesFromType={}))[S.COORDINATES_WGS84=1]="COORDINATES_WGS84",S[S.COORDINATES_WGS84_MC=2]="COORDINATES_WGS84_MC",S[S.COORDINATES_GCJ02=3]="COORDINATES_GCJ02",S[S.COORDINATES_GCJ02_MC=4]="COORDINATES_GCJ02_MC",S[S.COORDINATES_BD09=5]="COORDINATES_BD09",S[S.COORDINATES_BD09_MC=6]="COORDINATES_BD09_MC",S[S.COORDINATES_MAPBAR=7]="COORDINATES_MAPBAR",S[S.COORDINATES_51=8]="COORDINATES_51",e.CoordinatesToType=void 0,(G=e.CoordinatesToType||(e.CoordinatesToType={}))[G.COORDINATES_GCJ02=3]="COORDINATES_GCJ02",G[G.COORDINATES_BD09=5]="COORDINATES_BD09",G[G.COORDINATES_BD09_MC=6]="COORDINATES_BD09_MC";let I=null;function T(){if(null!==I)return I;const e="//mapopen.bj.bcebos.com/cms/react-bmap/markers_new2x_fbb9e99.png";I={simple_red:new BMapGL.Icon(e,new BMapGL.Size(21,33),{imageOffset:new BMapGL.Size(227,189),imageSize:new BMapGL.Size(300,300)}),simple_blue:new BMapGL.Icon(e,new BMapGL.Size(21,33),{imageOffset:new BMapGL.Size(227,225),imageSize:new BMapGL.Size(300,300)}),loc_red:new BMapGL.Icon(e,new BMapGL.Size(23,35),{imageOffset:new BMapGL.Size(200,189),imageSize:new BMapGL.Size(300,300)}),loc_blue:new BMapGL.Icon(e,new BMapGL.Size(23,35),{imageOffset:new BMapGL.Size(200,225),imageSize:new BMapGL.Size(300,300)}),start:new BMapGL.Icon(e,new BMapGL.Size(25,40),{imageOffset:new BMapGL.Size(200,139),imageSize:new BMapGL.Size(300,300)}),end:new BMapGL.Icon(e,new BMapGL.Size(25,40),{imageOffset:new BMapGL.Size(225,139),imageSize:new BMapGL.Size(300,300)}),location:new BMapGL.Icon(e,new BMapGL.Size(14,20),{imageOffset:new BMapGL.Size(124,233),imageSize:new BMapGL.Size(300,300)})};for(let t=1;t<=10;t++)I["red"+t]=new BMapGL.Icon(e,new BMapGL.Size(21,33),{imageOffset:new BMapGL.Size(21*(t-1),0),imageSize:new BMapGL.Size(300,300)});for(let t=1;t<=10;t++)I["blue"+t]=new BMapGL.Icon(e,new BMapGL.Size(21,33),{imageOffset:new BMapGL.Size(21*(t-1),66),imageSize:new BMapGL.Size(300,300)});return I}function P(){const e=""+w++;return t.provide("parentComponentId",e),e}const _=["id"];var A=t.defineComponent(Object.assign({name:"BMap"},{__name:"index",props:{ak:{},apiUrl:{},width:{default:"100%"},height:{default:"550px"},center:{default:()=>({lat:39.915185,lng:116.403901})},mapType:{default:"BMAP_NORMAL_MAP"},zoom:{default:14},heading:{default:0},tilt:{default:0},minZoom:{default:0},maxZoom:{default:21},noAnimation:{type:Boolean,default:!1},mapStyleId:{},mapStyleJson:{},showControls:{type:Boolean,default:!1},plugins:{},pluginsSourceLink:{},displayOptions:{},restrictCenter:{type:Boolean,default:!0},enableTraffic:{type:Boolean,default:!1},enableDragging:{type:Boolean,default:!0},enableInertialDragging:{type:Boolean,default:!0},enableScrollWheelZoom:{type:Boolean,default:!1},enableContinuousZoom:{type:Boolean,default:!0},enableResizeOnCenter:{type:Boolean,default:!0},enableDoubleClickZoom:{type:Boolean,default:!1},enableKeyboard:{type:Boolean,default:!0},enablePinchToZoom:{type:Boolean,default:!0},enableAutoResize:{type:Boolean,default:!0},enableIconClick:{type:Boolean},loadingBgColor:{default:"#f1f1f1"},loadingTextColor:{default:"#999"},backgroundColor:{default:()=>[245,245,245,100]},onClick:{},onDblclick:{},onRightclick:{},onRightdblclick:{},onMaptypechange:{},onMousemove:{},onMouseover:{},onMouseout:{},onMovestart:{},onMoving:{},onMoveend:{},onZoomstart:{},onZoomend:{},onAddoverlay:{},onAddcontrol:{},onRemovecontrol:{},onRemoveoverlay:{},onClearoverlays:{},onDragstart:{},onDragging:{},onDragend:{},onAddtilelayer:{},onRemovetilelayer:{},onLoad:{},onResize:{},onHotspotclick:{},onHotspotover:{},onHotspotout:{},onTilesloaded:{},onTouchstart:{},onTouchmove:{},onTouchend:{},onLongpress:{}},emits:["initd","unload","pluginReady","click","dblclick","rightclick","rightdblclick","maptypechange","mousemove","mouseover","mouseout","movestart","moving","moveend","zoomstart","zoomend","addoverlay","addcontrol","removecontrol","removeoverlay","clearoverlays","dragstart","dragging","dragend","addtilelayer","removetilelayer","load","resize","hotspotclick","hotspotover","hotspotout","tilesloaded","touchstart","touchmove","touchend","longpress"],setup(e,{expose:o,emit:n}){const i=e,l=t.ref();let s=null,d=t.ref(!1);const m=t.getCurrentInstance(),v=P(),{emit:y}=a(),h=t.computed((()=>g(i.width)?i.width:`${i.width}px`)),b=t.computed((()=>g(i.height)?i.height:`${i.height}px`)),w=f&&!!m;function M(){i.mapStyleId?s.setMapStyleV2({styleId:i.mapStyleId}):i.mapStyleJson&&s.setMapStyleV2({styleJson:i.mapStyleJson})}function B(e){e?s.setTrafficOn():s.setTrafficOff()}function k(e){var t,o;"string"==typeof e?s.centerAndZoom(e,i.zoom):s.centerAndZoom((t=e.lng,o=e.lat,new BMapGL.Point(t,o)),i.zoom)}function O(e){s.setDisplayOptions(e||{})}function L(e){s.setZoom(e,{noAnimation:i.noAnimation})}function S(e){void 0!==window[e]&&s.setMapType(window[e])}function G(e){s.setHeading(e)}function I(e){s.setTilt(e)}function T(e){e?s.enableDragging():s.disableDragging()}function A(e){e?s.enableInertialDragging():s.disableInertialDragging()}function x(e){e?s.enableScrollWheelZoom():s.disableScrollWheelZoom()}function D(e){e?s.enableContinuousZoom():s.disableContinuousZoom()}function R(e){e?s.enableResizeOnCenter():s.disableResizeOnCenter()}function z(e){e?s.enableDoubleClickZoom():s.disableDoubleClickZoom()}function E(e){e?s.enableKeyboard():s.disableKeyboard()}function N(e){e?s.enablePinchToZoom():s.disablePinchToZoom()}function j(e){e?s.enableAutoResize():s.disableAutoResize()}return t.onMounted((function(){if(!w)return;const{proxy:e}=m,o=i.ak||e&&e.$baiduMapAk,a=i.apiUrl||e&&e.$baiduMapApiUrl,f=i.plugins&&e.$baiduMapPlugins?Object.assign(e.$baiduMapPlugins,i.plugins):i.plugins||e.$baiduMapPlugins,g=i.pluginsSourceLink&&e.$baiduMapPluginsSourceLink?Object.assign(e.$baiduMapPluginsSourceLink,i.pluginsSourceLink):i.pluginsSourceLink||e.$baiduMapPluginsSourceLink||{},h=a||`_initBMap_${o}`;r({src:a||`//api.map.baidu.com/api?type=webgl&v=1.0&ak=${o}&callback=${h}`,addCalToWindow:!a,key:h,exportGetter:()=>window.BMapGL}).then((()=>{const{restrictCenter:e,enableIconClick:o,backgroundColor:a,minZoom:r,maxZoom:h,mapType:b,enableAutoResize:w,showControls:P,center:_,displayOptions:W}=i;if(!l.value)return;s=new BMapGL.Map(l.value,{backgroundColor:a,enableIconClick:o,restrictCenter:e,minZoom:r,maxZoom:h,mapType:window[b],enableAutoResize:w,showControls:P,displayOptions:W}),k(_),function(){const{enableDragging:e,enableInertialDragging:t,enableScrollWheelZoom:o,enableContinuousZoom:n,enableResizeOnCenter:a,enableDoubleClickZoom:l,enableKeyboard:r,enablePinchToZoom:s,enableAutoResize:c,enableTraffic:u,mapType:d,zoom:p,tilt:f,heading:m}=i;L(p),I(f),B(u),G(m),S(d),E(r),T(e),j(c),N(s),D(n),R(a),z(l),x(o),A(t)}(),M(),t.watch((()=>i.zoom),L),t.watch((()=>i.tilt),I),t.watch((()=>i.heading),G),t.watch((()=>i.center),C(k),{deep:!0}),t.watch((()=>i.mapStyleId),M),t.watch((()=>i.mapStyleJson),C(M),{deep:!0}),t.watch((()=>i.displayOptions),C(O),{deep:!0}),t.watch((()=>i.mapType),S),t.watch((()=>i.enableTraffic),B),t.watch((()=>i.enableDragging),T),t.watch((()=>i.enableInertialDragging),A),t.watch((()=>i.enableScrollWheelZoom),x),t.watch((()=>i.enableContinuousZoom),D),t.watch((()=>i.enableResizeOnCenter),R),t.watch((()=>i.enableDoubleClickZoom),z),t.watch((()=>i.enableKeyboard),E),t.watch((()=>i.enablePinchToZoom),N),t.watch((()=>i.enableAutoResize),j),u(i,n,s),f&&function(e,t={}){const o=[...new Set(e)].reduce(((e,o)=>{let n;return"string"==typeof o&&(n=c[o])?e.push(n(t[o])):"function"==typeof o&&e.push(o()),e}),[]);return Promise.all(o).then((e=>{const t={};return e.forEach((e=>{Object.assign(t,e)})),t}))}(f,g).then((e=>{n("pluginReady",s,e)})).catch((e=>{p("BMap","plugins error: "+e)}));const $={map:s,instance:m,BMapGL:window.BMapGL};y(v,$),n("initd",$),d.value=!0})).catch((e=>p("BMap",e.message)))})),t.onUnmounted((()=>{if(s)try{s.destroy()}catch(e){p("BMapGL SDK",e.message)}})),o({getMapInstance:()=>s,getBaseMapOptions:()=>i,resetCenter:()=>k(i.center),setDragging:T}),t.provide("getMapInstance",(()=>s)),t.provide("baseMapSetCenterAndZoom",(e=>k(e))),t.provide("baseMapSetDragging",(e=>T(e))),t.provide("getBaseMapOptions",(()=>i)),(e,o)=>t.unref(w)?(t.openBlock(),t.createElementBlock("div",{key:0,id:t.unref(v),class:"baidu-map-container",ref_key:"mapContainer",ref:l,style:t.normalizeStyle([{width:h.value,height:b.value,background:i.loadingBgColor},{position:"relative",overflow:"hidden"}])},[t.renderSlot(e.$slots,"loading",{},(()=>[t.createElementVNode("div",{style:t.normalizeStyle([{color:i.loadingTextColor},{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"}])},t.toDisplayString(t.unref(d)?"":"map loading..."),5)])),t.renderSlot(e.$slots,"default")],12,_)):t.createCommentVNode("",!0)}}));function x(e){const{on:o,off:n,emit:l}=a(),r=t.getCurrentInstance(),s=P(),{emit:c}=r||{emit:i},u=t.inject("getMapInstance",void 0),d=t.inject("parentComponentId",void 0)||"",f=r&&r.type.name||"";if(void 0===u)return{ready:i};const m=u();let g;const v=t=>{g=e(t.map)};return t.onMounted((()=>{m?v({map:m}):o(d,v)})),t.onBeforeUnmount((()=>{try{g&&g()}catch(e){p(f,e.message)}c("unload"),n(d,v)})),{ready:(e,t)=>{const o={map:e,instance:t,BMapGL:window.BMapGL};c("initd",o),l(s,o)}}}const D={style:{display:"none"}};var R=t.defineComponent(Object.assign({name:"BControl",inheritAttrs:!1},{__name:"index",props:{anchor:{default:"BMAP_ANCHOR_TOP_LEFT"},offset:{default:()=>({x:83,y:18})},visible:{type:Boolean,default:!0}},emits:["initd","unload"],setup(e){const o=e,n=t.ref(),{ready:a}=x((e=>{if(!n.value)return;const{offset:i,anchor:l,visible:r}=o,s=new BMapGL.Control;return s.defaultAnchor=window[l],s.defaultOffset=new BMapGL.Size(i.x,i.y),s.initialize=e=>e.getContainer().appendChild(n.value),r&&e.addControl(s),a(e,s),t.watch((()=>o.visible),(t=>{e[t?"addControl":"removeControl"](s)})),()=>e.removeControl(s)}));return(e,o)=>(t.openBlock(),t.createElementBlock("div",D,[t.createElementVNode("div",t.mergeProps({ref_key:"controlContainer",ref:n},e.$attrs),[t.renderSlot(e.$slots,"default")],16)]))}})),z=t.defineComponent(Object.assign({name:"BScale"},{__name:"index",props:{anchor:{default:"BMAP_ANCHOR_BOTTOM_LEFT"},offset:{default:()=>({x:83,y:18})},unit:{default:"BMAP_UNIT_METRIC"},visible:{type:Boolean,default:!0}},emits:["initd","unload"],setup(e){const o=e;let n;const{ready:a}=x((e=>{const{visible:l,offset:r,anchor:s}=o;return n=new BMapGL.ScaleControl({offset:new BMapGL.Size(r.x,r.y),anchor:window[s]}),l&&e.addControl(n),i(),a(e,n),t.watch((()=>o.visible),(t=>{e[t?"addControl":"removeControl"](n)})),()=>e.removeControl(n)}));function i(){n.setUnit(window[o.unit])}return t.watch((()=>o.unit),i),(e,t)=>null}})),E=t.defineComponent(Object.assign({name:"BZoom"},{__name:"index",props:{anchor:{default:"BMAP_ANCHOR_BOTTOM_RIGHT"},offset:{default:()=>({x:83,y:18})},visible:{type:Boolean,default:!0}},emits:["initd","unload"],setup(e){const o=e;let n;const{ready:a}=x((e=>{const{visible:i,offset:l,anchor:r}=o;return n=new BMapGL.ZoomControl({offset:new BMapGL.Size(l.x,l.y),anchor:window[r]}),i&&e.addControl(n),a(e,n),t.watch((()=>o.visible),(t=>{e[t?"addControl":"removeControl"](n)})),()=>e.removeControl(n)}));return(e,t)=>null}})),N=t.defineComponent(Object.assign({name:"BCityList"},{__name:"index",props:{anchor:{default:"BMAP_ANCHOR_TOP_LEFT"},offset:{default:()=>({x:18,y:18})},expand:{type:Boolean,default:!1},visible:{type:Boolean,default:!0}},emits:["initd","unload"],setup(e){const o=e;let n;const{ready:a}=x((e=>{const{visible:i,expand:l,offset:r,anchor:s}=o;return n=new BMapGL.CityListControl({expand:l,offset:new BMapGL.Size(r.x,r.y),anchor:window[s]}),i&&e.addControl(n),a(e,n),t.watch((()=>o.visible),(t=>{e[t?"addControl":"removeControl"](n)})),()=>e.removeControl(n)}));return(e,t)=>null}})),j=t.defineComponent(Object.assign({name:"BLocation"},{__name:"index",props:{anchor:{default:"BMAP_ANCHOR_BOTTOM_RIGHT"},offset:{default:()=>({x:18,y:18})},visible:{type:Boolean,default:!0},onLocationError:{},onLocationSuccess:{}},emits:["initd","unload","locationSuccess","locationError"],setup(e,{emit:o}){const n=e;let a;const{ready:i}=x((e=>{const{visible:l,offset:r,anchor:s}=n;return a=new BMapGL.LocationControl({offset:new BMapGL.Size(r.x,r.y),anchor:window[s]}),l&&e.addControl(a),i(e,a),u(n,o,a),t.watch((()=>n.visible),(t=>{e[t?"addControl":"removeControl"](a)})),()=>e.removeControl(a)}));return(e,t)=>null}}));const W={},$={style:{display:"none"}};var Z=t.defineComponent(Object.assign({name:"BCopyright",inheritAttrs:!1},{__name:"index",props:{anchor:{default:"BMAP_ANCHOR_BOTTOM_RIGHT"},offset:{default:()=>({x:83,y:18})},visible:{type:Boolean,default:!0}},emits:["initd","unload"],setup(e){var o;const n=e,a=t.ref();let i;const l=null===(o=t.getCurrentInstance())||void 0===o?void 0:o.uid,{ready:r}=x((e=>{const{anchor:o,offset:s,visible:c}=n;if(!a.value)return;let u=e.getBounds();return(i=W[o])||(i=new BMapGL.CopyrightControl({offset:new BMapGL.Size(s.x,s.y),anchor:window[o]}),W[o]=i,e.addControl(i)),c&&i.addCopyright({id:l,content:a.value.innerHTML,bounds:u}),r(e,i),t.watch((()=>n.visible),(e=>{e?a.value&&i.addCopyright({id:l,content:a.value.innerHTML,bounds:u}):l&&i.removeCopyright(l)})),()=>{var t,n;const a=W[o],i=null===(t=null==a?void 0:a.getCopyrightCollection)||void 0===t?void 0:t.bind(a);i&&(null===(n=i())||void 0===n?void 0:n.length)>1?a.removeCopyright(l):(e.removeControl(a),Reflect.deleteProperty(W,o))}}));return t.onUpdated((()=>{if(!i)return;let e=i.getCopyright(l);e&&a.value&&e.content!==a.value.innerHTML&&i.addCopyright({id:l,content:a.value.innerHTML,bounds:e.bounds})})),(e,o)=>(t.openBlock(),t.createElementBlock("div",$,[t.createElementVNode("div",t.mergeProps({ref_key:"copyrightContainer",ref:a},e.$attrs),[t.renderSlot(e.$slots,"default")],16)]))}})),F=t.defineComponent(Object.assign({name:"BNavigation3d"},{__name:"index",props:{anchor:{default:"BMAP_ANCHOR_BOTTOM_RIGHT"},offset:{default:()=>({x:83,y:18})},visible:{type:Boolean,default:!0}},emits:["initd","unload"],setup(e){const o=e;let n;const{ready:a}=x((e=>{const{visible:i,offset:l,anchor:r}=o;return n=new BMapGL.NavigationControl3D({offset:new BMapGL.Size(l.x,l.y),anchor:window[r]}),i&&e.addControl(n),a(e,n),t.watch((()=>o.visible),(t=>{e[t?"addControl":"removeControl"](n)})),()=>e.removeControl(n)}));return(e,t)=>null}})),U=t.defineComponent(Object.assign({name:"BPanoramaControl"},{__name:"index",props:{anchor:{default:"BMAP_ANCHOR_TOP_RIGHT"},offset:{default:()=>({x:10,y:10})},visible:{type:Boolean,default:!0}},emits:["initd","unload"],setup(e){const o=e;let n;const{ready:a}=x((e=>{const{visible:i,offset:l,anchor:r}=o;return n=new BMapGL.PanoramaControl,n.setOffset(new BMapGL.Size(l.x,l.y)),n.setAnchor(window[r]),i&&e.addControl(n),a(e,n),t.watch((()=>o.visible),(t=>{e[t?"addControl":"removeControl"](n)})),()=>e.removeControl(n)}));return(e,t)=>null}})),H=t.defineComponent(Object.assign({name:"BPanoramaCoverageLayer"},{__name:"index",emits:["initd","unload"],setup(e){let t;const{ready:o}=x((e=>(t=new BMapGL.PanoramaCoverageLayer,e.addTileLayer(t),o(e,t),()=>e.removeTileLayer(t))));return(e,t)=>null}})),V=t.defineComponent(Object.assign({name:"BMarker"},{__name:"index",props:{position:{},offset:{default:()=>({x:0,y:0})},icon:{},zIndex:{},enableMassClear:{type:Boolean,default:!0},enableDragging:{type:Boolean,default:!1},enableClicking:{type:Boolean,default:!0},raiseOnDrag:{type:Boolean,default:!1},draggingCursor:{default:"pointer"},rotation:{default:0},title:{default:""},visible:{type:Boolean,default:!0},onClick:{},onDblclick:{},onMousedown:{},onMouseup:{},onMouseout:{},onMouseover:{},onRemove:{},onInfowindowclose:{},onInfowindowopen:{},onDragstart:{},onDragging:{},onDragend:{},onRightclick:{}},emits:["initd","unload","click","dblclick","mousedown","mouseup","mouseout","mouseover","remove","infowindowclose","infowindowopen","dragstart","dragging","dragend","rightclick"],setup(e,{emit:o}){const n=e;let a;const{ready:i}=x((e=>{const f=()=>{if(!n.position)return!1;const{position:t,offset:r,enableMassClear:s,enableDragging:c,enableClicking:d,raiseOnDrag:f,draggingCursor:g,rotation:v,title:y,icon:h,zIndex:b,visible:w}=n,M={offset:new BMapGL.Size(r.x,r.y),enableMassClear:s,enableDragging:c,enableClicking:d,raiseOnDrag:f,draggingCursor:g,title:y};h&&(M.icon=l()),a=new BMapGL.Marker(new BMapGL.Point(t.lng,t.lat),M),p(v),m(b)&&function(e){a.setZIndex(e)}(b),w&&e.addOverlay(a),u(n,o,a),i(e,a)};return f(),t.watch((()=>n.position),C((e=>{var t;a?(t=e)&&t.lat&&t.lng&&a.setPosition(new BMapGL.Point(t.lng,t.lat)):f()})),{deep:!0}),t.watch((()=>n.icon),C(r),{deep:!0}),t.watch((()=>n.offset),C(d),{deep:!0}),t.watch((()=>n.enableDragging),s),t.watch((()=>n.enableMassClear),c),t.watch((()=>n.rotation),p),t.watch((()=>n.visible),(t=>{e[t?"addOverlay":"removeOverlay"](a)})),()=>{a&&e.removeOverlay(a)}}));function l(){const e=T(),{icon:t}=n;if(g(t)&&e[t])return e[t];{const{anchor:e,imageOffset:o,imageSize:n,imageUrl:a,printImageUrl:i,size:l}=t,r={size:new BMapGL.Size(l.width,l.height)};return n&&(r.imageSize=new BMapGL.Size(n.width,n.height)),e&&(r.anchor=new BMapGL.Size(e.x,e.y)),o&&(r.imageOffset=new BMapGL.Size(o.x,o.y)),i&&(r.printImageUrl=i),new BMapGL.Icon(a,new BMapGL.Size(l.width,l.height),r)}}function r(){a.setIcon(l())}function s(e){e?a.enableDragging():a.disableDragging()}function c(e){e?a.enableMassClear():a.disableMassClear()}function d(e){e&&a.setOffset(new BMapGL.Size(e.x,e.y))}function p(e){void 0!==e&&a.setRotation(e)}return t.provide("getOverlayInstance",(()=>a)),(e,o)=>t.renderSlot(e.$slots,"default")}})),J=t.defineComponent(Object.assign({name:"BMarker3d"},{__name:"index",props:{position:{},height:{},size:{default:50},shape:{default:"BMAP_SHAPE_CIRCLE"},fillColor:{default:"#f00"},fillOpacity:{default:.8},icon:{},enableMassClear:{type:Boolean,default:!0},visible:{type:Boolean,default:!0},onClick:{},onDblclick:{},onMousedown:{},onMouseup:{},onMouseout:{},onMouseover:{},onRemove:{},onRightclick:{}},emits:["initd","unload","click","dblclick","mousedown","mouseup","mouseout","mouseover","remove","rightclick"],setup(e,{emit:o}){const n=e;let a;const{ready:i}=x((e=>{const p=()=>{if(!n.position)return!1;if(!n.height)return!1;const{position:t,shape:r,fillColor:s,fillOpacity:c,size:p,icon:f,height:m,enableMassClear:g,visible:v}=n,y={size:p,fillColor:s,fillOpacity:c,shape:window[r]};f&&(y.icon=l()),a=new BMapGL.Marker3D(new BMapGL.Point(t.lng,t.lat),m,y),v&&e.addOverlay(a),d(g),u(n,o,a),i(e,a)};return p(),t.watch((()=>n.position),C((e=>{a?function(e){try{a.setPosition(new BMapGL.Point(e.lng,e.lat))}catch(e){console.error(e)}}(e):p()})),{deep:!0}),t.watch((()=>n.height),(e=>{var t;a?(t=e,a.setHeight(t)):p()})),t.watch((()=>n.enableMassClear),d),t.watch((()=>n.icon),C(c),{deep:!0}),t.watch((()=>n.enableMassClear),d),t.watch((()=>n.fillOpacity),s),t.watch((()=>n.fillColor),r),t.watch((()=>n.visible),(t=>{e[t?"addOverlay":"removeOverlay"](a)})),()=>{e.removeOverlay(a)}}));function l(){const{icon:e}=n,{anchor:t,imageOffset:o,imageSize:a,imageUrl:i,printImageUrl:l}=e,r={imageSize:new BMapGL.Size(a.width,a.height)};return t&&(r.anchor=new BMapGL.Size(t.x,t.y)),o&&(r.imageOffset=new BMapGL.Size(o.x,o.y)),l&&(r.printImageUrl=l),new BMapGL.Icon(i,new BMapGL.Size(a.width,a.height),r)}function r(e){a.setFillColor(e)}function s(e){a.setFillOpacity(e)}function c(){a.setIcon(l())}function d(e){e?a.enableMassClear():a.disableMassClear()}return t.provide("getOverlayInstance",(()=>a)),(e,o)=>t.renderSlot(e.$slots,"default")}})),q=t.defineComponent(Object.assign({name:"BLabel"},{__name:"index",props:{content:{},position:{},offset:{default:()=>({x:0,y:0})},zIndex:{},style:{},enableMassClear:{type:Boolean,default:!0},visible:{type:Boolean,default:!0},onClick:{},onDblclick:{},onMousedown:{},onMouseup:{},onMouseout:{},onMouseover:{},onRemove:{},onRightclick:{}},emits:["initd","unload","click","dblclick","mousedown","mouseup","mouseout","mouseover","remove","rightclick"],setup(e,{emit:o}){const n=e;let a;const i=()=>!!a,{ready:l}=x((e=>{const g=()=>{if(!n.content)return!1;if(!n.position)return!1;const{content:i,position:l,offset:s,enableMassClear:d,style:g,visible:v,zIndex:y}=n,h={position:new BMapGL.Point(l.lng,l.lat),offset:new BMapGL.Size(s.x,s.y),enableMassClear:d};a=new BMapGL.Label(i,h),g&&a.setStyle(g),v&&e.addOverlay(a),m(y)&&r(y),u(n,o,a),t.watch((()=>n.offset),C(p),{deep:!0}),t.watch((()=>n.style),C(c),{deep:!0}),t.watch((()=>n.enableMassClear),f),t.watch((()=>n.zIndex),r),t.watch((()=>n.visible),(t=>{e[t?"addOverlay":"removeOverlay"](a)}))};return g(),l(e,a),t.watch((()=>n.position),C(M(i,s,g)),{deep:!0}),t.watch((()=>n.content),M(i,d,g)),()=>{a&&e.removeOverlay(a)}}));function r(e){m(e)&&a.setZIndex(e)}function s(e){a.setPosition(new BMapGL.Point(e.lng,e.lat))}function c(e){m(e)&&a.setStyle(e)}function d(e){a.setContent(e)}function p(e){a.setOffset(new BMapGL.Size(e.x,e.y))}function f(e){e?a.enableMassClear():a.disableMassClear()}return t.provide("getOverlayInstance",(()=>a)),(e,o)=>t.renderSlot(e.$slots,"default")}})),K=t.defineComponent(Object.assign({name:"BPolyline"},{__name:"index",props:{path:{},strokeColor:{default:"#000"},strokeWeight:{default:2},strokeOpacity:{default:1},strokeStyle:{default:"solid"},enableMassClear:{type:Boolean,default:!0},enableEditing:{type:Boolean,default:!1},enableClicking:{type:Boolean,default:!0},geodesic:{type:Boolean,default:!1},clip:{type:Boolean,default:!0},linkRight:{type:Boolean,default:!0},visible:{type:Boolean,default:!0},onClick:{},onDblclick:{},onMousedown:{},onMouseup:{},onMouseout:{},onMouseover:{},onRemove:{},onLineupdate:{}},emits:["initd","unload","click","dblclick","mousedown","mouseup","mouseout","mouseover","remove","lineupdate"],setup(e,{emit:o}){const n=e;let a;const{ready:i}=x((e=>{const f=()=>{a&&e.removeOverlay(a)},m=()=>{if(!n.path||!n.path.length)return!1;const{path:f,strokeColor:m,strokeWeight:g,strokeOpacity:v,strokeStyle:y,enableMassClear:b,enableEditing:w,enableClicking:M,geodesic:C,clip:B,linkRight:k,visible:O}=n,L=h(f);a=new BMapGL.Polyline(L,{strokeColor:m,strokeWeight:g,strokeOpacity:v,strokeStyle:y,enableMassClear:b,enableEditing:w,enableClicking:M,geodesic:C,linkRight:k,clip:B}),O&&e.addOverlay(a),u(n,o,a),i(e,a),t.watch((()=>n.strokeColor),l),t.watch((()=>n.strokeOpacity),r),t.watch((()=>n.strokeWeight),s),t.watch((()=>n.strokeStyle),c),t.watch((()=>n.enableMassClear),d),t.watch((()=>n.enableEditing),p)};return m(),t.watch((()=>n.path),C((e=>{var t;a?e.length?(t=e,a&&a.setPath(h(t))):f():m()})),{deep:!0}),t.watch((()=>n.visible),(t=>{e[t?"addOverlay":"removeOverlay"](a)})),f}));function l(e){a&&a.setStrokeColor(e)}function r(e){a&&a.setStrokeOpacity(e)}function s(e){a&&a.setStrokeWeight(e)}function c(e){a&&a.setStrokeStyle(e)}function d(e){a&&(e?a.enableMassClear():a.disableMassClear())}function p(e){a&&(e?a.enableEditing():a.disableEditing())}return t.provide("getOverlayInstance",(()=>a)),(e,o)=>t.renderSlot(e.$slots,"default")}})),Y=t.defineComponent(Object.assign({name:"BBezierCurve"},{__name:"index",props:{path:{},controlPoints:{},strokeColor:{default:"#000"},strokeWeight:{default:2},strokeOpacity:{default:1},strokeStyle:{default:"solid"},enableMassClear:{type:Boolean,default:!0},visible:{type:Boolean,default:!0},onClick:{},onDblclick:{},onMousedown:{},onMouseup:{},onMouseout:{},onMouseover:{},onRemove:{},onLineupdate:{}},emits:["initd","unload","click","dblclick","mousedown","mouseup","mouseout","mouseover","remove","lineupdate"],setup(e,{emit:o}){const n=e;let a;const{ready:i}=x((e=>{const p=()=>{if(!n.path||!n.path||!n.path.length)return!1;if(!n.controlPoints||!n.controlPoints||!n.controlPoints.length)return!1;const{path:t,controlPoints:l,strokeColor:r,strokeWeight:s,strokeOpacity:c,strokeStyle:d,enableMassClear:p,visible:f}=n,m=h(t),g=l.map((e=>h(e)));try{a=new BMapGL.BezierCurve(m,g,{strokeColor:r,strokeWeight:s,strokeOpacity:c,strokeStyle:d,enableMassClear:p})}catch(e){}f&&e.addOverlay(a),i(e,a),u(n,o,a)};return p(),t.watch((()=>n.path),C((e=>{var t;a?(t=e,a.setPath(h(t))):p()})),{deep:!0}),t.watch((()=>n.controlPoints),C((e=>{var t;a?(t=e,a.setControlPoints(t.map((e=>h(e))))):p()})),{deep:!0}),t.watch((()=>n.strokeColor),l),t.watch((()=>n.strokeOpacity),r),t.watch((()=>n.strokeWeight),s),t.watch((()=>n.strokeStyle),c),t.watch((()=>n.enableMassClear),d),t.watch((()=>n.visible),(t=>{e[t?"addOverlay":"removeOverlay"](a)})),()=>{e.removeOverlay(a)}}));function l(e){a.setStrokeColor(e)}function r(e){a.setStrokeOpacity(e)}function s(e){a.setStrokeWeight(e)}function c(e){a.setStrokeStyle(e)}function d(e){e?a.enableMassClear():a.disableMassClear()}return t.provide("getOverlayInstance",(()=>a)),(e,o)=>t.renderSlot(e.$slots,"default")}})),Q=t.defineComponent(Object.assign({name:"BPolygon"},{__name:"index",props:{path:{},isBoundary:{type:Boolean},strokeColor:{default:"#000"},autoCenter:{type:Boolean,default:!0},strokeWeight:{default:2},strokeOpacity:{default:1},strokeStyle:{default:"solid"},fillColor:{default:"#fff"},fillOpacity:{default:.3},enableMassClear:{type:Boolean},enableEditing:{type:Boolean},enableClicking:{type:Boolean},geodesic:{type:Boolean,default:!1},clip:{type:Boolean,default:!0},visible:{type:Boolean,default:!0},onClick:{},onDblclick:{},onMousedown:{},onMouseup:{},onMouseout:{},onMouseover:{},onRemove:{},onLineupdate:{}},emits:["initd","unload","click","dblclick","mousedown","mouseup","mouseout","mouseover","remove","lineupdate"],setup(e,{emit:o}){const n=e,a=t.inject("baseMapSetCenterAndZoom");let i;const{ready:l}=x((e=>{const a=()=>{if(!n.path)return!1;if(!n.path.length)return;const{path:a,strokeColor:y,strokeWeight:b,strokeOpacity:w,strokeStyle:M,fillOpacity:C,fillColor:B,enableMassClear:k,enableEditing:O,enableClicking:L,geodesic:S,clip:G,isBoundary:I,visible:T}=n,P=I?a:h(a);P&&(i=new BMapGL.Polygon(P,{strokeColor:y,strokeWeight:b,strokeOpacity:w,strokeStyle:M,fillOpacity:C,fillColor:B,enableMassClear:k,enableEditing:O,enableClicking:L,geodesic:S,clip:G}),T&&e.addOverlay(i),T&&r(),u(n,o,i),l(e,i),t.watch((()=>n.strokeColor),s),t.watch((()=>n.strokeOpacity),d),t.watch((()=>n.fillColor),c),t.watch((()=>n.fillOpacity),p),t.watch((()=>n.strokeWeight),f),t.watch((()=>n.strokeStyle),m),t.watch((()=>n.enableMassClear),g),t.watch((()=>n.enableEditing),v),t.watch((()=>n.visible),(t=>{e[t?"addOverlay":"removeOverlay"](i),t&&r()})))};return a(),t.watch((()=>n.path),C((e=>{i?function(e){const{isBoundary:t}=n;i.setPath(t?e:h(e)),r()}(e):a()})),{deep:!0}),()=>{i&&e.removeOverlay(i)}}));function r(){t.nextTick((()=>{if(n.autoCenter)try{const e=i.getBounds();if(e){const t=e.getCenter();t&&a(t)}}catch(e){console.warn("BPolygon","auto set center error",e)}}))}function s(e){i&&i.setStrokeColor(e)}function c(e){i&&i.setFillColor(e)}function d(e){i&&i.setStrokeOpacity(e)}function p(e){i&&i.setFillOpacity(e)}function f(e){i&&i.setStrokeWeight(e)}function m(e){i&&i.setStrokeStyle(e)}function g(e){i&&(e?i.enableMassClear():i.disableMassClear())}function v(e){i&&(e?i.enableEditing():i.disableEditing())}return t.provide("getOverlayInstance",(()=>i)),(e,o)=>t.renderSlot(e.$slots,"default")}}));const X={style:{display:"none"}};var ee=t.defineComponent(Object.assign({name:"BInfoWindow"},{__name:"index",props:{modelValue:{type:Boolean,default:void 0},show:{type:Boolean,default:!1},title:{default:""},position:{},width:{default:0},height:{default:0},maxWidth:{default:220},offset:{default:()=>({x:0,y:0})},enableAutoPan:{type:Boolean,default:!0},enableCloseOnClick:{type:Boolean,default:!0},onClose:{},onOpen:{},onMaximize:{},onRestore:{},onClickclose:{}},emits:["initd","unload","close","open","maximize","restore","clickclose","update:show"],setup(e,{emit:o}){const n=e,a=t.computed({get:()=>n.show,set:e=>o("update:show",e)}),i=t.ref();let l,r;t.watchEffect((()=>{n.modelValue,0}));const{ready:s}=x((e=>{r=e;const b=()=>{const{title:r,width:d,height:f,enableAutoPan:m,maxWidth:g,offset:v,enableCloseOnClick:y}=n,h={width:d,height:f,title:r,maxWidth:g,enableAutoPan:m,enableCloseOnClick:y,offset:new BMapGL.Size(v.x,v.y)};l=new BMapGL.InfoWindow(i.value||"",h),l.addEventListener("close",(()=>{n.show&&(a.value=!1)})),l.addEventListener("open",(()=>{n.show||(a.value=!0)})),e.addOverlay(l),p(),function(){const e=window.MutationObserver;if(!e)return;new e((()=>{l.redraw()})).observe(i.value,{attributes:!0,childList:!0,characterData:!0,subtree:!0})}(),u(n,o,l),s(e,l),n.show&&t.nextTick((()=>{c(),t.nextTick((()=>{!l._visible&&(a.value=!1)}))}))};return i.value?b():t.nextTick((()=>b())),t.watch((()=>n.position),C((e=>function(e){c(),l.setPosition(new BMapGL.Point(e.lng,e.lat)),a.value||d()}(e))),{deep:!0}),t.watch((()=>n.title),f),t.watch((()=>n.width),g),t.watch((()=>n.height),m),t.watch((()=>n.maxWidth),v),t.watch((()=>n.enableAutoPan),y),t.watch((()=>n.enableCloseOnClick),h),t.watch((()=>n.show),C((()=>{n.show?c():d()}))),()=>{l&&e.removeOverlay(l)}}));function c(){const{position:e}=n;e&&l&&(r.openInfoWindow(l,new BMapGL.Point(e.lng,e.lat)),a.value=!0)}function d(){l&&(l.hide(),a.value=!1)}function p(){var e;l.redraw(),Array.prototype.forEach.call((null===(e=i.value)||void 0===e?void 0:e.querySelectorAll("img"))||[],(e=>{e.onload=()=>{l.redraw()}}))}function f(e){l.setTitle(e)}function m(e){l.setHeight(e)}function g(e){l.setWidth(e)}function v(e){l.setMaxWidth(e)}function y(e){e?l.enableAutoPan():l.disableAutoPan()}function h(e){e?l.enableCloseOnClick():l.disableCloseOnClick()}return t.onUpdated((()=>{var e;l&&l.isOpen()&&(e=i.value||"",l.setContent(e),p())})),t.provide("getOverlayInstance",(()=>l)),(e,o)=>(t.openBlock(),t.createElementBlock("div",X,[t.createElementVNode("div",t.mergeProps({ref_key:"infoWindowContainer",ref:i},e.$attrs),[t.renderSlot(e.$slots,"default")],16)]))}})),te=t.defineComponent(Object.assign({name:"BCircle"},{__name:"index",props:{center:{},radius:{},strokeColor:{default:"#000"},strokeOpacity:{default:1},fillColor:{default:"#fff"},fillOpacity:{default:.3},strokeWeight:{default:2},strokeStyle:{default:"solid"},enableMassClear:{type:Boolean,default:!0},enableEditing:{type:Boolean,default:!1},enableClicking:{type:Boolean,default:!0},geodesic:{type:Boolean,default:!1},clip:{type:Boolean,default:!0},visible:{type:Boolean,default:!0},onClick:{},onDblclick:{},onMousedown:{},onMouseup:{},onMouseout:{},onMouseover:{},onRemove:{},onLineupdate:{}},emits:["initd","unload","click","dblclick","mousedown","mouseup","mouseout","mouseover","remove","lineupdate"],setup(e,{emit:o}){const n=e;let a;const{ready:i}=x((e=>((()=>{const{center:t,radius:l,strokeColor:r,strokeOpacity:s,fillColor:c,fillOpacity:d,strokeWeight:p,strokeStyle:f,enableMassClear:m,enableEditing:g,enableClicking:v,geodesic:y,clip:h,visible:b}=n,w=new BMapGL.Point(t.lng,t.lat);a=new BMapGL.Circle(w,l,{strokeColor:r,strokeWeight:p,strokeOpacity:s,strokeStyle:f,enableMassClear:m,enableEditing:g,enableClicking:v,geodesic:y,clip:h,fillOpacity:d,fillColor:c}),b&&e.addOverlay(a),u(n,o,a),i(e,a)})(),t.watch((()=>n.center),C(r),{deep:!0}),t.watch((()=>n.radius),l),t.watch((()=>n.strokeColor),s),t.watch((()=>n.strokeOpacity),d),t.watch((()=>n.fillColor),c),t.watch((()=>n.fillOpacity),p),t.watch((()=>n.strokeWeight),f),t.watch((()=>n.strokeStyle),m),t.watch((()=>n.enableMassClear),g),t.watch((()=>n.enableEditing),v),t.watch((()=>n.visible),(t=>{e[t?"addOverlay":"removeOverlay"](a)})),()=>{e.removeOverlay(a)})));function l(e){a.setRadius(e)}function r(e){a&&a.setCenter(new BMapGL.Point(e.lng,e.lat))}function s(e){a.setStrokeColor(e)}function c(e){a.setFillColor(e)}function d(e){a.setStrokeOpacity(e)}function p(e){a.setFillOpacity(e)}function f(e){a.setStrokeWeight(e)}function m(e){a.setStrokeStyle(e)}function g(e){e?a.enableMassClear():a.disableMassClear()}function v(e){e?a.enableEditing():a.disableEditing()}return t.provide("getOverlayInstance",(()=>a)),(e,o)=>t.renderSlot(e.$slots,"default")}})),oe=t.defineComponent(Object.assign({name:"BPrism"},{__name:"index",props:{path:{},altitude:{},isBoundary:{type:Boolean},topFillColor:{default:"#fff"},topFillOpacity:{default:.5},sideFillColor:{default:"#fff"},sideFillOpacity:{default:.8},autoCenter:{type:Boolean,default:!0},enableMassClear:{type:Boolean,default:!0},visible:{type:Boolean,default:!0},onClick:{},onDblclick:{},onMousedown:{},onMouseup:{},onMouseout:{},onMouseover:{},onRemove:{},onLineupdate:{}},emits:["initd","unload","click","dblclick","mousedown","mouseup","mouseout","mouseover","remove","lineupdate"],setup(e,{emit:o}){const n=e,a=t.inject("baseMapSetCenterAndZoom");let i;const{ready:l}=x((e=>{const g=()=>{if(!n.path||!n.path||!n.path.length)return!1;const{path:g,altitude:v,isBoundary:y,topFillColor:b,topFillOpacity:w,sideFillColor:M,sideFillOpacity:C,enableMassClear:B,visible:k}=n,O=y?g:h(g);i=new BMapGL.Prism(O,v,{topFillColor:b,topFillOpacity:w,sideFillColor:M,sideFillOpacity:C,enableMassClear:B}),k&&e.addOverlay(i),u(n,o,i),l(e,i),n.autoCenter&&t.nextTick((()=>{var e;try{const t=null===(e=i.getBounds())||void 0===e?void 0:e.getCenter();a(t)}catch(e){d("BPrism","auto set center error")}})),t.watch((()=>n.enableMassClear),r),t.watch((()=>n.topFillColor),s),t.watch((()=>n.topFillOpacity),c),t.watch((()=>n.sideFillColor),p),t.watch((()=>n.sideFillOpacity),f),t.watch((()=>n.altitude),m)};return g(),t.watch((()=>n.path),C((e=>{i?function(e){const{isBoundary:t}=n;i.setPath(t?e:h(e))}(e):g()})),{deep:!0}),t.watch((()=>n.visible),(t=>{e[t?"addOverlay":"removeOverlay"](i)})),()=>{i&&e.removeOverlay(i)}}));function r(e){e?i.enableMassClear():i.disableMassClear()}function s(e){i&&i.setTopFillColor(e)}function c(e){i&&i.setTopFillOpacity(e)}function p(e){i&&i.setSideFillColor(e)}function f(e){i&&i.setSideFillOpacity(e)}function m(e){i&&i.setAltitude(e)}return t.provide("getOverlayInstance",(()=>i)),(e,o)=>t.renderSlot(e.$slots,"default")}})),ne=t.defineComponent(Object.assign({name:"BGroundOverlay"},{__name:"index",props:{type:{},url:{},startPoint:{},endPoint:{},autoCenter:{type:Boolean,default:!1},opacity:{default:1},visible:{type:Boolean,default:!0},onClick:{},onDblclick:{},onMousemove:{},onMouseover:{},onMouseout:{}},emits:["initd","unload","click","dblclick","mousemove","mouseover","mouseout"],setup(e,{emit:o}){const n=e;let a;const{ready:i}=x((e=>{const l=()=>{a&&e.removeOverlay(a)},r=()=>{l();let{startPoint:o,endPoint:i,opacity:r,type:s,autoCenter:c,visible:u}=n;const p=function(){let e=n.url;if("function"==typeof e&&(e=e(),!e))return!1;return e}();if(!p)return;if(!o)return!1;if(!i)return!1;const f=(m=o,g=i,new BMapGL.Bounds(new BMapGL.Point(m.lng,g.lat),new BMapGL.Point(g.lng,m.lat)));var m,g;const v={opacity:r,type:s,url:p.value||p};a=new BMapGL.GroundOverlay(f,v),u&&e.addOverlay(a),c&&t.nextTick((()=>{try{const t=f.getCenter();e.panTo(t)}catch(e){d("GroundOverlay","auto set center error")}}))};return r(),u(n,o,a),i(e,a),t.watch((()=>n),C(r),{deep:!0}),t.watch((()=>n.visible),(t=>{e[t?"addOverlay":"removeOverlay"](a)})),l}));return t.provide("getOverlayInstance",(()=>a)),(e,o)=>t.renderSlot(e.$slots,"default")}})),ae=t.defineComponent(Object.assign({name:"BContextMenu",inheritAttrs:!1},{__name:"index",props:{width:{default:100},visible:{type:Boolean,default:!0},menuItems:{default:()=>[]},onOpen:{},onClose:{}},emits:["initd","unload","open","close"],setup(e,{emit:o}){const n=e,a=t.inject("getOverlayInstance",(()=>null));let i;const{ready:l}=x((e=>{const r=a()||e,s=()=>{i&&r.removeContextMenu(i)},c=()=>{const{width:t,menuItems:a,visible:l}=n;i=new BMapGL.ContextMenu;for(const o of a){if(g(o)&&"-"===o){i.addSeparator();continue}const n=new BMapGL.MenuItem(o.text,(function(t,n){o.callback.call(null,{point:t,pixel:n,map:e,BMapGL:BMapGL,target:r})}),{width:t,id:String(Math.random())});o.disabled?n.disable():n.enable(),i.addItem(n)}l&&r.addContextMenu(i),u(n,o,i)};return t.watch((()=>n.visible),(e=>{i&&r[e?"addContextMenu":"removeContextMenu"](i)})),t.watch((()=>n.menuItems),C((()=>{s(),c()})),{deep:!0}),c(),l(e,i),s}));return(e,t)=>null}})),ie=t.defineComponent(Object.assign({name:"BDistrictLayer"},{__name:"index",props:{visible:{type:Boolean,default:!0},name:{},kind:{default:0},fillColor:{default:"#fdfd27"},fillOpacity:{default:1},strokeColor:{default:"#231cf8"},strokeWeight:{default:1},strokeOpacity:{default:1},viewport:{type:Boolean,default:!1},onClick:{},onDblclick:{},onRightclick:{},onRightdblclick:{},onMousemove:{},onMouseover:{},onMouseout:{}},emits:["initd","unload","mouseover","mouseout","click"],setup(e,{emit:o}){const n=e;let a;const{ready:i}=x((e=>{if(!n.name)return p("BDistrictLayer","DistrictLayer props.name is required");const{visible:l,name:r,kind:s,fillColor:c,fillOpacity:d,strokeColor:f,strokeOpacity:m,strokeWeight:g,viewport:v}=n;a=new BMapGL.DistrictLayer({name:`(${r})`,kind:s,fillColor:c,fillOpacity:d,strokeColor:f,strokeOpacity:m,strokeWeight:g,viewport:v}),l&&e.addDistrictLayer(a),u(n,o,a),t.watch((()=>n.visible),(t=>{a&&e[t?"addDistrictLayer":"removeDistrictLayer"](a)}));const y=setTimeout((()=>{i(e,a)}),400);return()=>{clearTimeout(y),e.removeDistrictLayer(a)}}));return(e,t)=>null}})),le=t.defineComponent(Object.assign({name:"BMapMask"},{__name:"index",props:{path:{},showRegion:{default:"inside"},isBuildingMask:{type:Boolean,default:!1},isMapMask:{type:Boolean,default:!1},isPoiMask:{type:Boolean,default:!1},visible:{type:Boolean,default:!0},onClick:{},onDblclick:{},onMousedown:{},onMouseup:{},onMouseout:{},onMouseover:{},onRightclick:{}},emits:["initd","unload","click","dblclick","mousedown","mouseup","mouseout","mouseover","rightclick"],setup(e,{emit:o}){const n=e;let a;const{ready:i}=x((e=>{const l=()=>{a&&e.removeOverlay(a)};return t.watchPostEffect((()=>{if(l(),!n.path||!n.path||!n.path.length)return!1;const{path:t,showRegion:r,isBuildingMask:s,isMapMask:c,isPoiMask:d,visible:p}=n,f=h(t);a=new BMapGL.MapMask(f,{showRegion:r,isBuildingMask:s,isMapMask:c,isPoiMask:d}),p&&e.addOverlay(a),u(n,o,a),i(e,a)})),l}));return t.provide("getOverlayInstance",(()=>a)),(e,o)=>t.renderSlot(e.$slots,"default")}})),re=t.defineComponent(Object.assign({name:"BAutoComplete"},{__name:"index",props:{location:{},types:{},onSearchComplete:{},onHighlight:{},onConfirm:{}},emits:["initd","unload","searchComplete","highlight","confirm"],setup(e,{emit:o}){const n=e,a=t.ref();let i;const{ready:l}=x((e=>{a.value||d("BAutoComplete","render error");const{location:r,types:s}=n;let c=e;"object"==typeof r&&r.lat&&r.lng&&(c=b(r)),i=new BMapGL.Autocomplete({location:c,onSearchComplete:e=>o("searchComplete",e),input:a.value,types:s}),u(n,o,i),l(e,i),t.watch((()=>n.location),(t=>{let o=e;"object"==typeof t&&t.lat&&t.lng&&(o=b(t)),i.setLocation(o)})),t.watch((()=>n.types),(e=>{e&&i.setTypes(e)}))}));return(e,o)=>(t.openBlock(),t.createElementBlock("input",{class:"b-auto-complete-input",type:"text",ref_key:"autoCompleteInput",ref:a,placeholder:"请输入搜索关键词"},null,512))}})),se=[A,R,z,E,F,V,J,Z,j,q,K,Q,le,Y,te,N,oe,ee,ae,U,H,ne,ie,re];const ce={install:(e,t)=>{const{ak:o,apiUrl:n,plugins:a,pluginsSourceLink:i}=t||{},l=e.config.globalProperties;for(const t of se){const o=t.name;e.component(o,t)}o&&(l.$baiduMapAk=o),n&&(l.$baiduMapApiUrl=n),a&&(l.$baiduMapPlugins=a),i&&(l.$baiduMapPluginsSourceLink=i)},version:"2.5.0"},ue=ce.install,de=ce.version;e.BAutoComplete=re,e.BBezierCurve=Y,e.BCircle=te,e.BCityList=N,e.BContextMenu=ae,e.BControl=R,e.BCopyright=Z,e.BDistrictLayer=ie,e.BGroundOverlay=ne,e.BInfoWindow=ee,e.BLabel=q,e.BLocation=j,e.BMap=A,e.BMapMask=le,e.BMarker=V,e.BMarker3d=J,e.BNavigation3d=F,e.BPanoramaControl=U,e.BPanoramaCoverageLayer=H,e.BPolygon=Q,e.BPolyline=K,e.BPrism=oe,e.BScale=z,e.BZoom=E,e.default=ce,e.getScriptAsync=r,e.install=ue,e.useAddressGeocoder=function(e){const o=t.ref(),n=t.ref(!0),a=t.ref(!0);let i;return{get:(t,l)=>{if(i||(i=new BMapGL.Geocoder),!t)return p("useAddressGeocoder","missing required params: address");if(!l)return p("useAddressGeocoder","missing required  params: city");const r=v(t);n.value=!0,(r?Promise.all(t.map((e=>O(i,e,l)))):O(i,t,l)).then((t=>{if(t)if(r){let e=0;o.value=t.map((t=>(e+=+!t,t))),a.value=e===t.length}else o.value=t,a.value=!1;else o.value=t,a.value=!0;e&&e(o)})).catch((e=>{p("useAddressGeocoder",e.message),a.value=!0,o.value=null})).finally((()=>{n.value=!1}))},point:o,isLoading:n,isEmpty:a}},e.useAreaBoundary=function(e){const o=t.ref(!1),n=t.ref([]);let a;return t.onUnmounted((()=>a=null)),{isLoading:o,boundaries:n,get:t=>{a||(a=new BMapGL.Boundary),o.value=!0,a.get(t,(t=>{o.value=!1,n.value=t.boundaries,e&&e(n)}))}}},e.useBrowserLocation=function(e,o){e=e||{};const n=t.ref({}),a=t.ref(!0),i=t.ref(!1),l=t.ref();return{get:()=>{e.SDKLocation=e.enableSDKLocation,new Promise(((t,o)=>{a.value=!0;const n=new BMapGL.Geolocation;n.getCurrentPosition((function(e){const a=n.getStatus();if(l.value=k[a],a===window.BMAP_STATUS_SUCCESS){const{address:o,accuracy:n,point:a}=e;t({accuracy:n,point:a,address:o})}else o()}),e)})).then((e=>{i.value=!1,n.value=e,o&&o(n)})).catch((()=>{i.value=!0})).finally((()=>{a.value=!1}))},isLoading:a,isError:i,status:l,location:n}},e.useDefaultMarkerIcons=T,e.useInstanceId=P,e.useIpLocation=function(e){const o=t.ref({}),n=t.ref(!0);return{location:o,isLoading:n,get:()=>{n.value=!0,(new BMapGL.LocalCity).get((t=>{n.value=!1,o.value={code:t.code,point:t.center,name:t.name},e&&e(o)}))}}},e.usePoint=function(){const e=t.ref(null);return{point:e,set:({lng:t,lat:o})=>{e.value=new BMapGL.Point(t,o)}}},e.usePointConvertor=function(){const e=t.ref(),o=t.ref(!0),n=t.ref(!1),a=t.ref();let i;return{convert:(t,l,r)=>{if(!t)return p("usePointConvertor","missing required params: points");if(!l)return p("usePointConvertor","missing required params: from");if(!r)return p("usePointConvertor","missing required params: to");if(!t.length)return;i||(i=new BMapGL.Convertor),o.value=!0;const s=t.map((e=>new BMapGL.Point(e.lng,e.lat)));(function(e,t,o,n){return new Promise(((a,i)=>{e.translate(t,o,n,(e=>{0===e.status?a(e):i(e.status)}))}))})(i,s,l,r).then((t=>{e.value=t.points.map((e=>({lng:e.lng,lat:e.lat}))),a.value=t.status,n.value=!1})).catch((e=>{e.value=e,n.value=!0})).finally((()=>{o.value=!1}))},result:e,isLoading:o,isError:n,status:a}},e.usePointGeocoder=function(e,o){e=e||{};const n=t.ref(),a=t.ref(!0),i=t.ref(!0);let l;return{get:t=>{if(!t)return p("usePointGeocoder","missing required params: point");l||(l=new BMapGL.Geocoder);const r=v(t);a.value=!0,(r?Promise.all(t.map((t=>L(l,t,e)))):L(l,t,e)).then((e=>{if(e)if(r){let t=0;n.value=e.map((e=>(t+=+!e,e))),i.value=t===e.length}else n.value=e,i.value=!1;else n.value=e,i.value=!0;o&&o(n)})).catch((()=>{i.value=!0,n.value=void 0})).finally((()=>{a.value=!1}))},result:n,isLoading:a,isEmpty:i}},e.useTrackAnimation=function(e,o){let n,a,i,l;const r=t.ref("INITIAL"),s=o||{};let c;t.watch((()=>e.value),(e=>{i=e}));const u=()=>{var e,t,o,r;n||(l=i.getMapInstance(),n=new BMapGLLib.TrackAnimation(l,a,s),e=n,t="_status",o=n._status,r=d,Object.defineProperty(e,t,{get:()=>o,set(e){o=e,r&&r(o)}}))},d=()=>{n&&(r.value=B[n._status])};return t.onUnmounted((()=>{n&&"INITIAL"!==r.value&&n.cancel(),l&&(l.removeOverlay(a),a=null)})),{setPath:e=>{const t=e.map((e=>new BMapGL.Point(e.lng,e.lat)));a=new BMapGL.Polyline(t),u()},start:()=>{const e=performance.now(),t=c||0,o=s.delay||0;n&&e-t>o&&"INITIAL"===r.value&&n.start(),c=performance.now()},stop:()=>{n&&n.pause()},cancel:()=>{n&&n.cancel()},proceed:()=>{n&&n.continue()},status:r}},e.useViewAnimation=function(e,o){(o=o||{}).disableDragging=void 0===o.disableDragging;const n=t.ref("INITIAL"),a={animationcancel:[()=>n.value="INITIAL"],animationend:[()=>n.value="INITIAL"],animationstart:[()=>n.value="PLAYING"]};let i,l,r=!1;t.watch((()=>e.value),(e=>{i=e}));const s=()=>{const{enableDragging:e}=i.getBaseMapOptions();i.setDragging(e)};let c={addEventListener(e,t){a[e]||(a[e]=[]),a[e].push(t)},removeEventListener(e,t){const o=a[e];if(o)if(t)for(let e=o.length;e>=0;e--)o[e]===t&&o.splice(e,1);else a[e]=[]}};return t.onUnmounted((()=>{try{c&&"INITIAL"==n.value&&(l=i.getMapInstance(),c._cancel(l),s())}catch(e){return!1}})),{viewAnimation:c,start:()=>{r&&"PLAYING"!==n.value&&(l=i.getMapInstance(),l.startViewAnimation(c),i.setDragging(!o.disableDragging))},cancel:()=>{r&&"INITIAL"!==n.value&&(c._cancel(l),s())},stop:()=>{r&&"PLAYING"===n.value&&(c._pause(),n.value="STOPPING")},proceed:()=>{r&&"STOPPING"===n.value&&(c._continue(),n.value="PLAYING")},status:n,setKeyFrames:e=>{const{loop:t,duration:n,delay:i}=o;for(const t of e)if(t.center){const{lng:e,lat:o}=t.center;t.center=new BMapGL.Point(e,o)}c=new BMapGL.ViewAnimation(e,{duration:n,delay:i,interation:t});for(const e of Object.keys(a)){const t=a[e];t&&t.length&&t.forEach((t=>{c.addEventListener(e,t)}))}r=!0}}},e.version=de,Object.defineProperty(e,"__esModule",{value:!0})}));
